"module", "code for..."
"scipy.constants", "Many mathematical and physical constants."
"scipy.special", "Special functions for mathematical physics, such as iry, elliptic, bessel, gamma, beta, hypergeometric, parabolic cylinder, mathieu, spheroidal wave, struve, and kelvin functions."
"scipy.integrate", "Functions for performing numerical integration using trapezoidal, Simpson's, Romberg, and other methods. Also provides methods for integration of ordinary differential equations."
"scipy.optimize", "Standard minimization / maximization routines that operate on generic user-defined objective functions. Algorithms include: Nelder-Mead Simplex, Powell's, conjugate gradient, BFGS, least-squares, constrained optimizers, simulated annealing, brute force, Brent's method, Newton's method, bisection method, Broyden, Anderson, and line search."
"scipy.linalg", "Much broader base of linear algebra routines than NumPy. Offers more control for using special, faster routines for specific cases (e.g., tridiagonal matrices). Methods include: inverse, determinant, solving a linear system of equations, computing norms and pseudo/generalized inverses, eigenvalue/eigenvector decomposition, singular value decomposition, LU decomposition, Cholesky decomposition, QR decomposition, Schur decomposition, and various other mathematical operations on matrices."
"scipy.sparse", "Routines for working with large, sparse matrices."
"scipy.interpolate", "Routines and classes for interpolation objects that can be used with discrete numeric data. Linear and spline interpolation available for one- and two-dimensional data sets."
"scipy.fftpack", "Fast Fourier transform routines and processing."
"scipy.signal", "Signal processing routines, such as convolution, correlation, finite fourier transforms, B-spline smoothing, filtering, etc."
"scipy.stats", "Huge library of various statistical distributions and statistical functions for operating on sets of data."